{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Ilkhomjoon/100-days-of-code-python/blob/main/Project1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "m0IYEkO03Kz6"
      },
      "outputs": [],
      "source": [
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import os"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bxt67yiVvQyh",
        "outputId": "8ee6ef73-e7bd-4c90-c195-0296e0141a03"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "os.chdir('/content/sample_data')"
      ],
      "metadata": {
        "id": "c8UUWmzx3Z0r"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#download data from using the link\n"
      ],
      "metadata": {
        "id": "f10rm17N4nEb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#read file\n",
        "df = pd.read_csv('/content/Salaries.csv', on_bad_lines='skip')"
      ],
      "metadata": {
        "id": "-xX4laEA3S_R"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.tail(200)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "Dbm_MvlA3inD",
        "outputId": "4a1565e8-6e5f-4204-db3e-2b309ccd6ebb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Id      EmployeeName                     JobTitle BasePay  \\\n",
              "148450  148451         Gabe Harp   BdComm Mbr, Grp2,M=$25/Mtg  200.00   \n",
              "148451  148452       Joshua Arce   BdComm Mbr, Grp2,M=$25/Mtg  200.00   \n",
              "148452  148453   Elinore E Lurie     Commissioner No Benefits  200.00   \n",
              "148453  148454      Lucia V Harp            Recreation Leader  199.41   \n",
              "148454  148455      Xue Yan Yang   Community Development Asst    0.00   \n",
              "...        ...               ...                          ...     ...   \n",
              "148645  148646  Carolyn A Wilson    Human Services Technician    0.00   \n",
              "148647  148648    Joann Anderson  Communications Dispatcher 2    0.00   \n",
              "148648  148649       Leon Walker                    Custodian    0.00   \n",
              "148649  148650     Roy I Tillery                    Custodian    0.00   \n",
              "148653  148654         Joe Lopez   Counselor, Log Cabin Ranch    0.00   \n",
              "\n",
              "       OvertimePay OtherPay  Benefits  TotalPay  TotalPayBenefits  Year  \\\n",
              "148450        0.00     0.00       2.0    200.00            202.00  2014   \n",
              "148451        0.00     0.00       2.0    200.00            202.00  2014   \n",
              "148452        0.00     0.00       2.0    200.00            202.00  2014   \n",
              "148453        0.00     0.00       2.0    199.41            201.41  2014   \n",
              "148454        0.00   200.39       0.0    200.39            200.39  2014   \n",
              "...            ...      ...       ...       ...               ...   ...   \n",
              "148645        0.00     0.00       0.0      0.00              0.00  2014   \n",
              "148647        0.00     0.00       0.0      0.00              0.00  2014   \n",
              "148648        0.00     0.00       0.0      0.00              0.00  2014   \n",
              "148649        0.00     0.00       0.0      0.00              0.00  2014   \n",
              "148653        0.00  -618.13       0.0   -618.13           -618.13  2014   \n",
              "\n",
              "        Notes         Agency Status  \n",
              "148450    NaN  San Francisco     PT  \n",
              "148451    NaN  San Francisco     PT  \n",
              "148452    NaN  San Francisco     PT  \n",
              "148453    NaN  San Francisco     PT  \n",
              "148454    NaN  San Francisco     PT  \n",
              "...       ...            ...    ...  \n",
              "148645    NaN  San Francisco     PT  \n",
              "148647    NaN  San Francisco     PT  \n",
              "148648    NaN  San Francisco     PT  \n",
              "148649    NaN  San Francisco     PT  \n",
              "148653    NaN  San Francisco     PT  \n",
              "\n",
              "[200 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-13709d3d-967f-4d6e-9352-43fc6c796f20\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>EmployeeName</th>\n",
              "      <th>JobTitle</th>\n",
              "      <th>BasePay</th>\n",
              "      <th>OvertimePay</th>\n",
              "      <th>OtherPay</th>\n",
              "      <th>Benefits</th>\n",
              "      <th>TotalPay</th>\n",
              "      <th>TotalPayBenefits</th>\n",
              "      <th>Year</th>\n",
              "      <th>Notes</th>\n",
              "      <th>Agency</th>\n",
              "      <th>Status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>148450</th>\n",
              "      <td>148451</td>\n",
              "      <td>Gabe Harp</td>\n",
              "      <td>BdComm Mbr, Grp2,M=$25/Mtg</td>\n",
              "      <td>200.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>200.00</td>\n",
              "      <td>202.00</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148451</th>\n",
              "      <td>148452</td>\n",
              "      <td>Joshua Arce</td>\n",
              "      <td>BdComm Mbr, Grp2,M=$25/Mtg</td>\n",
              "      <td>200.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>200.00</td>\n",
              "      <td>202.00</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148452</th>\n",
              "      <td>148453</td>\n",
              "      <td>Elinore E Lurie</td>\n",
              "      <td>Commissioner No Benefits</td>\n",
              "      <td>200.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>200.00</td>\n",
              "      <td>202.00</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148453</th>\n",
              "      <td>148454</td>\n",
              "      <td>Lucia V Harp</td>\n",
              "      <td>Recreation Leader</td>\n",
              "      <td>199.41</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>199.41</td>\n",
              "      <td>201.41</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148454</th>\n",
              "      <td>148455</td>\n",
              "      <td>Xue Yan Yang</td>\n",
              "      <td>Community Development Asst</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>200.39</td>\n",
              "      <td>0.0</td>\n",
              "      <td>200.39</td>\n",
              "      <td>200.39</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148645</th>\n",
              "      <td>148646</td>\n",
              "      <td>Carolyn A Wilson</td>\n",
              "      <td>Human Services Technician</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148647</th>\n",
              "      <td>148648</td>\n",
              "      <td>Joann Anderson</td>\n",
              "      <td>Communications Dispatcher 2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148648</th>\n",
              "      <td>148649</td>\n",
              "      <td>Leon Walker</td>\n",
              "      <td>Custodian</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148649</th>\n",
              "      <td>148650</td>\n",
              "      <td>Roy I Tillery</td>\n",
              "      <td>Custodian</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148653</th>\n",
              "      <td>148654</td>\n",
              "      <td>Joe Lopez</td>\n",
              "      <td>Counselor, Log Cabin Ranch</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-618.13</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-618.13</td>\n",
              "      <td>-618.13</td>\n",
              "      <td>2014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>San Francisco</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>200 rows × 13 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13709d3d-967f-4d6e-9352-43fc6c796f20')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-a90fca3a-be87-4096-93ed-ed698ef288be\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a90fca3a-be87-4096-93ed-ed698ef288be')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-a90fca3a-be87-4096-93ed-ed698ef288be button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-13709d3d-967f-4d6e-9352-43fc6c796f20 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-13709d3d-967f-4d6e-9352-43fc6c796f20');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columns_list = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "for column in columns_list:\n",
        "    df[column] = df[column].apply(pd.to_numeric, errors='coerce')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LmsPiO16zF6n",
        "outputId": "2b67eabb-9a8d-4392-9ec2-8b01a2ffffd3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "BasePay\n",
            "OvertimePay\n",
            "Benefits\n",
            "TotalPay\n",
            "TotalPayBenefits\n",
            "Year\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columns_list = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "for column in columns_list:\n",
        "    df[column] = pd.to_numeric(df[column], errors='coerce')\n",
        "\n",
        "def calculate_mean(data):\n",
        "    return sum(data) / len(data)\n",
        "\n",
        "def calculate_variance(data):\n",
        "    mean = calculate_mean(data)\n",
        "    squared_diff_sum = sum((x - mean) ** 2 for x in data)\n",
        "    variance = squared_diff_sum / (len(data) - 1)\n",
        "    return variance\n",
        "\n",
        "def calculate_standard_deviation(data):\n",
        "    variance = calculate_variance(data)\n",
        "    std_deviation = variance ** 0.5\n",
        "    return std_deviation\n",
        "\n",
        "columns_to_calculate = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "\n",
        "for column in columns_to_calculate:\n",
        "    data_for_column = df[column].dropna()\n",
        "    variance = calculate_variance(data_for_column)\n",
        "    std_deviation = calculate_standard_deviation(data_for_column)\n",
        "\n",
        "    print(f\"Column: {column}\")\n",
        "    print(\"Variance:\", round(variance,2))\n",
        "    print(\"Standard deviation:\", round(std_deviation,3))\n",
        "    print()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ux5cirKXz-xq",
        "outputId": "dcf6b02b-0bac-4299-c654-6bcc21f0b304"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Column: BasePay\n",
            "Variance: 1885095758.27\n",
            "Standard deviation: 43417.689\n",
            "\n",
            "Column: OvertimePay\n",
            "Variance: 137808123.53\n",
            "Standard deviation: 11739.17\n",
            "\n",
            "Column: Benefits\n",
            "Variance: 237228253.33\n",
            "Standard deviation: 15402.216\n",
            "\n",
            "Column: TotalPay\n",
            "Variance: 2643085394.99\n",
            "Standard deviation: 51410.946\n",
            "\n",
            "Column: TotalPayBenefits\n",
            "Variance: 4280445148.33\n",
            "Standard deviation: 65425.111\n",
            "\n",
            "Column: Year\n",
            "Variance: 0.67\n",
            "Standard deviation: 0.816\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columns_list = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "for column in columns_list:\n",
        "    df[column] = pd.to_numeric(df[column], errors='coerce')\n",
        "\n",
        "# Calculate standard deviation and variance for each column using pandas built-in methods\n",
        "columns_to_calculate = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "\n",
        "for column in columns_to_calculate:\n",
        "    std_deviation = df[column].std()\n",
        "    variance = df[column].var()\n",
        "\n",
        "    print(f\"Column: {column}\")\n",
        "    print(\"Variance:\", round(variance,2))\n",
        "    print(\"Standard deviation:\", round(std_deviation,3))\n",
        "    print()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gFvM3_WX2Tk2",
        "outputId": "06ff0686-0881-4619-b673-5397786ca053"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Column: BasePay\n",
            "Variance: 1885095758.27\n",
            "Standard deviation: 43417.689\n",
            "\n",
            "Column: OvertimePay\n",
            "Variance: 137808123.53\n",
            "Standard deviation: 11739.17\n",
            "\n",
            "Column: Benefits\n",
            "Variance: 237228253.33\n",
            "Standard deviation: 15402.216\n",
            "\n",
            "Column: TotalPay\n",
            "Variance: 2643085394.99\n",
            "Standard deviation: 51410.946\n",
            "\n",
            "Column: TotalPayBenefits\n",
            "Variance: 4280445148.33\n",
            "Standard deviation: 65425.111\n",
            "\n",
            "Column: Year\n",
            "Variance: 0.67\n",
            "Standard deviation: 0.816\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columns_list = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "for column in columns_list:\n",
        "    df[column] = pd.to_numeric(df[column], errors='coerce')\n",
        "\n",
        "cov_matrix = df.cov()\n",
        "\n",
        "coefficient_of_covariance = cov_matrix.loc[\"BasePay\", \"OvertimePay\"] / (df[\"BasePay\"].std() * df[\"OvertimePay\"].std())\n",
        "\n",
        "range_df = df[columns_list].max() - df[columns_list].min()\n",
        "\n",
        "print(\"Coefficient of Covariance between BasePay and OvertimePay:\", coefficient_of_covariance)\n",
        "print(\"Range for each column:\")\n",
        "print(range_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FZ-J3JWT6Htg",
        "outputId": "24652434-3bb7-4467-d3d6-bb8c5aee4f94"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Coefficient of Covariance between BasePay and OvertimePay: 0.2778106478238405\n",
            "Range for each column:\n",
            "BasePay             319441.02\n",
            "OvertimePay         220909.49\n",
            "Benefits             96604.55\n",
            "TotalPay            472570.77\n",
            "TotalPayBenefits    511350.81\n",
            "Year                     2.00\n",
            "dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columns_list = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "for column in columns_list:\n",
        "    df[column] = pd.to_numeric(df[column], errors='coerce')\n",
        "\n",
        "columns_to_calculate = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "\n",
        "for column in columns_to_calculate:\n",
        "    column_data = df[column]\n",
        "\n",
        "    mean = column_data.mean()\n",
        "\n",
        "    median = column_data.median()\n",
        "\n",
        "    mode = column_data.mode().iloc[0]\n",
        "\n",
        "    print(f\"Column: {column}\")\n",
        "    print(\"Mean:\", mean)\n",
        "    print(\"Median:\", median)\n",
        "    print(\"Mode:\", mode)\n",
        "    print()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BI8qTN7V6Yra",
        "outputId": "8a18f92d-c246-4b51-9f36-e9b7dded41b4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Column: BasePay\n",
            "Mean: 67207.55842464652\n",
            "Median: 65547.035\n",
            "Mode: 0.0\n",
            "\n",
            "Column: OvertimePay\n",
            "Mean: 5238.027995928563\n",
            "Median: 0.0\n",
            "Mode: 0.0\n",
            "\n",
            "Column: Benefits\n",
            "Mean: 25007.89315082985\n",
            "Median: 28628.62\n",
            "Mode: 0.0\n",
            "\n",
            "Column: TotalPay\n",
            "Mean: 75743.08240214773\n",
            "Median: 72365.82\n",
            "Mode: 0.0\n",
            "\n",
            "Column: TotalPayBenefits\n",
            "Mean: 100750.97555297759\n",
            "Median: 101641.75\n",
            "Mode: 7959.18\n",
            "\n",
            "Column: Year\n",
            "Mean: 2013.012027628877\n",
            "Median: 2013.0\n",
            "Mode: 2014\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columns_list = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "for column in columns_list:\n",
        "    df[column] = pd.to_numeric(df[column], errors='coerce')\n",
        "\n",
        "description = df.describe()\n",
        "\n",
        "print(description)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LFUacT3F6nHG",
        "outputId": "5c169a3e-3060-4ba5-fc04-cd49ef49460c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                  Id        BasePay    OvertimePay       Benefits  \\\n",
            "count  112491.000000  111886.000000  112491.000000  112491.000000   \n",
            "mean    92405.000062   67207.558425    5238.027996   25007.893151   \n",
            "std     32473.499011   43417.689463   11739.170479   15402.215858   \n",
            "min     36160.000000    -166.010000      -0.010000     -33.890000   \n",
            "25%     64282.500000   33644.427500       0.000000   11535.395000   \n",
            "50%     92405.000000   65547.035000       0.000000   28628.620000   \n",
            "75%    120527.500000   95229.030000    4815.270000   35566.855000   \n",
            "max    148654.000000  319275.010000  220909.480000   96570.660000   \n",
            "\n",
            "            TotalPay  TotalPayBenefits           Year  Notes  \n",
            "count  112491.000000     112491.000000  112491.000000    0.0  \n",
            "mean    75743.082402     100750.975553    2013.012028    NaN  \n",
            "std     51410.946257      65425.110992       0.815818    NaN  \n",
            "min      -618.130000       -618.130000    2012.000000    NaN  \n",
            "25%     35949.620000      47782.800000    2012.000000    NaN  \n",
            "50%     72365.820000     101641.750000    2013.000000    NaN  \n",
            "75%    107205.735000     142633.970000    2014.000000    NaN  \n",
            "max    471952.640000     510732.680000    2014.000000    NaN  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columns_list = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "for column in columns_list:\n",
        "    df[column] = pd.to_numeric(df[column], errors='coerce')\n",
        "\n",
        "for column in columns_list:\n",
        "    plt.figure()\n",
        "    plt.hist(df[column], bins=10)\n",
        "    plt.xlabel(column)\n",
        "    plt.ylabel(\"Frequency\")\n",
        "    plt.title(f\"Histogram of {column}\")\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "mGond_vj6sRB",
        "outputId": "5cb96a02-ceb9-41ce-b9f6-386fe8f8abe7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAk0AAAHHCAYAAACiOWx7AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA9aElEQVR4nO3deVhV5d7/8c8GZHDYoCKQiWJpDjklKtLskcSkwdKOlimaZhmOmKmnHofqpNnJoZzqV0fsZGl20kqUJBwqIwcUx8QGywFBSwElBYT790cP+2kL6pLQDfZ+Xde+ct/ru9f67ntHflr7XgubMcYIAAAAF+Tm6gYAAAAqA0ITAACABYQmAAAACwhNAAAAFhCaAAAALCA0AQAAWEBoAgAAsIDQBAAAYAGhCQAAwAJCE/AXFRISov79+7u6javeK6+8ouuuu07u7u5q06aNq9u5qEmTJslms7m6DaBCIjQBV4G4uDjZbDZt2bKl1O133nmnWrRo8aePs3LlSk2aNOlP7+evYvXq1XrmmWd0yy23aMGCBXrppZdK1Kxbt042m83S42LS09M1adIkpaamluv7CAkJceojICBAt912m5YtW1auxwEqOg9XNwDANdLS0uTmdmn/37Ry5UrNmTOH4GTRmjVr5Obmprfffluenp6l1jRr1kz/+c9/nMbGjx+v6tWr69lnn72k46Wnp2vy5MkKCQkp97Nabdq00ejRox3HeeONN/Tggw9q3rx5evLJJ8v1WEBFRWgC/qK8vLxc3cIly83NVbVq1VzdhmVHjx6Vj4/PeQOTJAUGBurRRx91Gps6dar8/f1LjLvStdde69RPv3791KhRI82YMYPQhL8Mvp4D/qLOXdNUUFCgyZMnq3HjxvL29lbt2rV16623KjExUZLUv39/zZkzR5JK/cooNzdXo0ePVnBwsLy8vNSkSRP961//kjHG6binT5/W8OHD5e/vrxo1aui+++7T4cOHZbPZnM5gFa+t2bNnjx555BHVrFlTt956qyRpx44d6t+/v6677jp5e3srKChIjz32mH799VenYxXvY9++fXr00Ufl6+urOnXq6H/+539kjNHBgwd1//33y263KygoSK+++qqluTt79qxeeOEFXX/99fLy8lJISIj+8Y9/KC8vz1Fjs9m0YMEC5ebmOuYqLi7O0v5L8+OPP+qhhx5SrVq1VLVqVXXs2FHx8fGO7evWrVP79u0lSQMGDChxzC+//FIPPfSQ6tevLy8vLwUHB2vUqFE6ffp0mfoJCgpSs2bNtH//fknWPpO1a9fKZrOV+rXee++9J5vNpuTk5DL1A1wJnGkCriLZ2dn65ZdfSowXFBRc9LWTJk3SlClTNGjQIHXo0EE5OTnasmWLtm7dqrvuuktPPPGE0tPTlZiYWOLrJGOM7rvvPq1du1YDBw5UmzZt9Nlnn2nMmDE6fPiwZsyY4ajt37+/PvjgA/Xt21cdO3bU+vXrFRUVdd6+HnroITVu3FgvvfSSI4AlJibqxx9/1IABAxQUFKTdu3frzTff1O7du/XNN9+UWP/Tq1cvNWvWTFOnTlV8fLxefPFF1apVS2+88Yb+9re/6eWXX9aiRYv09NNPq3379rr99tsvOFeDBg3SwoUL1bNnT40ePVobN27UlClT9O233zoCwX/+8x+9+eab2rRpk9566y1J0s0333zRz6E0mZmZuvnmm/Xbb79p+PDhql27thYuXKj77rtPH374oR544AE1a9ZMzz//vCZMmKDBgwfrtttuczrm0qVL9dtvv2nIkCGqXbu2Nm3apNdff12HDh3S0qVLL7mngoICHTx4ULVr15Zk7TO58847FRwcrEWLFumBBx5w2t+iRYt0/fXXKzw8vExzBFwRBkClt2DBAiPpgo8bb7zR6TUNGjQw0dHRjuetW7c2UVFRFzxOTEyMKe0/G8uXLzeSzIsvvug03rNnT2Oz2cz3339vjDEmJSXFSDIjR450quvfv7+RZCZOnOgYmzhxopFkHn744RLH++2330qMvf/++0aS+eKLL0rsY/DgwY6xs2fPmnr16hmbzWamTp3qGD9x4oTx8fFxmpPSpKamGklm0KBBTuNPP/20kWTWrFnjGIuOjjbVqlW74P5Kc+ONN5o77rjD8XzkyJFGkvnyyy8dYydPnjQNGzY0ISEhprCw0BhjzObNm40ks2DBghL7LG3OpkyZYmw2m/n5558dY8Vz9kcNGjQwXbp0MceOHTPHjh0z27dvN7179zaSzLBhw867/9I+k/HjxxsvLy+TlZXlGDt69Kjx8PBw+vyBioiv54CryJw5c5SYmFji0apVq4u+1s/PT7t379Z33313ycdduXKl3N3dNXz4cKfx0aNHyxijVatWSZISEhIkSU899ZRT3bBhw86779LWy/j4+Dj+fObMGf3yyy/q2LGjJGnr1q0l6gcNGuT4s7u7u9q1aydjjAYOHOgY9/PzU5MmTfTjjz+etxfp9/cqSbGxsU7jxYuk//iVWXlZuXKlOnTo4Ph6UpKqV6+uwYMH66efftKePXsuuo8/zllubq5++eUX3XzzzTLGaNu2bRd9/erVq1WnTh3VqVNHrVu31tKlS9W3b1+9/PLLJfZ/oc+kX79+ysvL04cffugYW7Jkic6ePVuh1nABpeHrOeAq0qFDB7Vr167EeM2aNUv92u6Pnn/+ed1///264YYb1KJFC3Xt2lV9+/a1FLh+/vln1a1bVzVq1HAab9asmWN78T/d3NzUsGFDp7pGjRqdd9/n1krS8ePHNXnyZC1evFhHjx512padnV2ivn79+k7PfX195e3tLX9//xLj566LOlfxezi356CgIPn5+Tnea3n6+eefFRYWVmL8j/N7sVtKHDhwQBMmTNAnn3yiEydOOG0rbc7OFRYWphdffFE2m01Vq1ZVs2bN5Ofn59hu9TNp2rSp2rdvr0WLFjlC66JFi9SxY8cL/nsAVASEJgCSpNtvv10//PCDPv74Y61evVpvvfWWZsyYofnz5zudqbnS/ngGo9jf//53ff311xozZozatGmj6tWrq6ioSF27dlVRUVGJend3d0tjkkosXD+fynQDyMLCQt111106fvy4xo4dq6ZNm6patWo6fPiw+vfvX+qcncvf318RERHn3X4pn0m/fv00YsQIHTp0SHl5efrmm280e/bsP/0+gcuN0ATAoVatWhowYIAGDBigU6dO6fbbb9ekSZMcoel8QaFBgwb6/PPPdfLkSaezTXv37nVsL/5nUVGR9u/fr8aNGzvqvv/+e8s9njhxQklJSZo8ebImTJjgGC/L14plUfwevvvuO8eZHun3xdpZWVmO91rex0xLSysxfu78nu/z2blzp/bt26eFCxeqX79+jvHiKyP/rEv9THr37q3Y2Fi9//77On36tKpUqaJevXqVSy/A5cSaJgCSVOJrqerVq6tRo0ZOl9EX3yMpKyvLqbZbt24qLCwscbZgxowZstlsuvvuuyVJkZGRkqS5c+c61b3++uuW+yw+Q3TuGaGZM2da3sef0a1bt1KPN336dEm64JWAf+aYmzZtcrocPzc3V2+++aZCQkLUvHlzSef/fEqbM2OMZs2aVS79Xepn4u/vr7vvvlvvvvuuFi1apK5du5b4qhSoiDjTBECS1Lx5c915550KDQ1VrVq1tGXLFn344YcaOnSooyY0NFSSNHz4cEVGRsrd3V29e/fWvffeq06dOunZZ5/VTz/9pNatW2v16tX6+OOPNXLkSF1//fWO1/fo0UMzZ87Ur7/+6rjlwL59+yRZ+8rLbrfr9ttv17Rp01RQUKBrr71Wq1evdtwv6HJr3bq1oqOj9eabbyorK0t33HGHNm3apIULF6p79+7q1KlTuR9z3Lhxev/993X33Xdr+PDhqlWrlhYuXKj9+/frv//9r+PO7tdff738/Pw0f/581ahRQ9WqVVNYWJiaNm2q66+/Xk8//bQOHz4su92u//73vyXWNpVVWT6Tfv36qWfPnpKkF154oVz6AC471124B6C8FN9yYPPmzaVuv+OOOy56y4EXX3zRdOjQwfj5+RkfHx/TtGlT889//tPk5+c7as6ePWuGDRtm6tSpY2w2m9Ol6SdPnjSjRo0ydevWNVWqVDGNGzc2r7zyiikqKnI6bm5uromJiTG1atUy1atXN927dzdpaWlGktMtAIovfT927FiJ93Po0CHzwAMPGD8/P+Pr62seeughk56eft7bFpy7j/PdCqC0eSpNQUGBmTx5smnYsKGpUqWKCQ4ONuPHjzdnzpyxdJyLOfeWA8YY88MPP5iePXsaPz8/4+3tbTp06GBWrFhR4rUff/yxad68ufHw8HC6/cCePXtMRESEqV69uvH39zePP/642b59e4lbFJzvlgMXux2F1c+kWF5enqlZs6bx9fU1p0+ftjQvgKvZjLG46hEALpPU1FTddNNNevfdd9WnTx9Xt4Mr4OzZs6pbt67uvfdevf32265uB7CENU0ArqjSfm3HzJkz5ebmdtE7cePqsXz5ch07dsxpYTpQ0bGmCcAVNW3aNKWkpKhTp07y8PDQqlWrtGrVKg0ePFjBwcGubg+X2caNG7Vjxw698MILuummm3THHXe4uiXAMr6eA3BFJSYmavLkydqzZ49OnTql+vXrq2/fvnr22Wfl4cH/x13t+vfvr3fffVdt2rRRXFzcRW/KCVQkhCYAAAALWNMEAABgAaEJAADAAhYQlJOioiKlp6erRo0alep3UgEA8FdmjNHJkydVt25dx41iz4fQVE7S09O58gcAgErq4MGDqlev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9evr5MmTeu+997Ru3Tp99tln8vX11cCBAxUbG6tatWrJbrdr2LBhCg8PV8eOHSVJXbp0UfPmzdW3b19NmzZNGRkZeu655xQTEyMvLy9J0pNPPqnZs2frmWee0WOPPaY1a9bogw8+UHz8/12NFhsbq+joaLVr104dOnTQzJkzlZubqwEDBrhkXgAAQMXj0tB09OhR9evXT0eOHJGvr69atWqlzz77THfddZckacaMGXJzc1OPHj2Ul5enyMhIzZ071/F6d3d3rVixQkOGDFF4eLiqVaum6OhoPf/8846ahg0bKj4+XqNGjdKsWbNUr149vfXWW4qMjHTU9OrVS8eOHdOECROUkZGhNm3aKCEhocTicAAA8NdV4e7TVFlxn6arA/dpAoC/lkp5nyYAAICKjNAEAABgAaEJAADAAkITAACABYQmAAAACwhNAAAAFhCaAAAALCA0AQAAWEBoAgAAsIDQBAAAYAGhCQAAwAJCEwAAgAWEJgAAAAsITQAAABYQmgAAACwgNAEAAFhAaAIAALCA0AQAAGABoQkAAMACQhMAAIAFhCYAAAALCE0AAAAWlCk0/fjjj+XdBwAAQIVWptDUqFEjderUSe+++67OnDlT3j0BAABUOGUKTVu3blWrVq0UGxuroKAgPfHEE9q0aVN59wYAAFBhlCk0tWnTRrNmzVJ6err+/e9/68iRI7r11lvVokULTZ8+XceOHSvvPgEAAFzqTy0E9/Dw0IMPPqilS5fq5Zdf1vfff6+nn35awcHB6tevn44cOVJefQIAALjUnwpNW7Zs0VNPPaVrrrlG06dP19NPP60ffvhBiYmJSk9P1/33319efQIAALiUR1leNH36dC1YsEBpaWnq1q2b3nnnHXXr1k1ubr9nsIYNGyouLk4hISHl2SsAAIDLlCk0zZs3T4899pj69++va665ptSagIAAvf3223+qOQAAgIqiTKHpu+++u2iNp6enoqOjy7J7AACACqdMa5oWLFigpUuXlhhfunSpFi5c+KebAgAAqGjKFJqmTJkif3//EuMBAQF66aWX/nRTAAAAFU2ZQtOBAwfUsGHDEuMNGjTQgQMH/nRTAAAAFU2ZQlNAQIB27NhRYnz79u2qXbv2n24KAACgoilTaHr44Yc1fPhwrV27VoWFhSosLNSaNWs0YsQI9e7du7x7BAAAcLkyXT33wgsv6KefflLnzp3l4fH7LoqKitSvXz/WNAEAgKtSmUKTp6enlixZohdeeEHbt2+Xj4+PWrZsqQYNGpR3fwAAABVCmUJTsRtuuEE33HBDefUCAABQYZUpNBUWFiouLk5JSUk6evSoioqKnLavWbOmXJoDrrSQcfGubuGS/TQ1ytUtAMBfQplC04gRIxQXF6eoqCi1aNFCNputvPsCAACoUMoUmhYvXqwPPvhA3bp1K+9+AAAAKqQy3XLA09NTjRo1Ku9eAAAAKqwyhabRo0dr1qxZMsaUdz8AAAAVUpm+nvvqq6+0du1arVq1SjfeeKOqVKnitP2jjz4ql+YAAAAqijKFJj8/Pz3wwAPl3QsAAECFVabQtGDBgvLuAwAAoEIr05omSTp79qw+//xzvfHGGzp58qQkKT09XadOnSq35gAAACqKMp1p+vnnn9W1a1cdOHBAeXl5uuuuu1SjRg29/PLLysvL0/z588u7TwAAAJcq05mmESNGqF27djpx4oR8fHwc4w888ICSkpLKrTkAAICKokxnmr788kt9/fXX8vT0dBoPCQnR4cOHy6UxAACAiqRMZ5qKiopUWFhYYvzQoUOqUaPGn24KAACgoilTaOrSpYtmzpzpeG6z2XTq1ClNnDiRX60CAACuSmX6eu7VV19VZGSkmjdvrjNnzuiRRx7Rd999J39/f73//vvl3SMAAIDLlSk01atXT9u3b9fixYu1Y8cOnTp1SgMHDlSfPn2cFoYDAABcLcoUmiTJw8NDjz76aHn2AgAAUGGVKTS98847F9zer1+/MjUDAABQUZUpNI0YMcLpeUFBgX777Td5enqqatWqhCYAAHDVKdPVcydOnHB6nDp1Smlpabr11ltZCA4AAK5KZf7dc+dq3Lixpk6dWuIsFAAAwNWg3EKT9Pvi8PT09PLcJQAAQIVQpjVNn3zyidNzY4yOHDmi2bNn65ZbbimXxgAAACqSMoWm7t27Oz232WyqU6eO/va3v+nVV18tj74AAAAqlDKFpqKiovLuAwAAoEIr1zVNAAAAV6synWmKjY21XDt9+vSyHAIAAKBCKVNo2rZtm7Zt26aCggI1adJEkrRv3z65u7urbdu2jjqbzVY+XQIAALhYmULTvffeqxo1amjhwoWqWbOmpN9veDlgwADddtttGj16dLk2CQAA4GplWtP06quvasqUKY7AJEk1a9bUiy++yNVzAADgqlSm0JSTk6Njx46VGD927JhOnjz5p5sCAACoaMoUmh544AENGDBAH330kQ4dOqRDhw7pv//9rwYOHKgHH3ywvHsEAABwuTKFpvnz5+vuu+/WI488ogYNGqhBgwZ65JFH1LVrV82dO9fyfqZMmaL27durRo0aCggIUPfu3ZWWluZUc+bMGcXExKh27dqqXr26evTooczMTKeaAwcOKCoqSlWrVlVAQIDGjBmjs2fPOtWsW7dObdu2lZeXlxo1aqS4uLgS/cyZM0chISHy9vZWWFiYNm3aZH1SAADAVa1Moalq1aqaO3eufv31V8eVdMePH9fcuXNVrVo1y/tZv369YmJi9M033ygxMVEFBQXq0qWLcnNzHTWjRo3Sp59+qqVLl2r9+vVKT093OptVWFioqKgo5efn6+uvv9bChQsVFxenCRMmOGr279+vqKgoderUSampqRo5cqQGDRqkzz77zFGzZMkSxcbGauLEidq6datat26tyMhIHT16tCxTBAAArjI2Y4wp64u///57/fDDD7r99tvl4+MjY8yfus3AsWPHFBAQoPXr1+v2229Xdna26tSpo/fee089e/aUJO3du1fNmjVTcnKyOnbsqFWrVumee+5Renq6AgMDJf1+Jmzs2LE6duyYPD09NXbsWMXHx2vXrl2OY/Xu3VtZWVlKSEiQJIWFhal9+/aaPXu2pN/veh4cHKxhw4Zp3LhxF+09JydHvr6+ys7Olt1uL/McnE/IuPhy3yeuDj9NjXJ1CwBQaV3K399lOtP066+/qnPnzrrhhhvUrVs3HTlyRJI0cODAP3W7gezsbElSrVq1JEkpKSkqKChQRESEo6Zp06aqX7++kpOTJUnJyclq2bKlIzBJUmRkpHJycrR7925HzR/3UVxTvI/8/HylpKQ41bi5uSkiIsJRAwAA/trKFJpGjRqlKlWq6MCBA6patapjvFevXo4zN5eqqKhII0eO1C233KIWLVpIkjIyMuTp6Sk/Pz+n2sDAQGVkZDhq/hiYircXb7tQTU5Ojk6fPq1ffvlFhYWFpdYU7+NceXl5ysnJcXoAAICrV5lubrl69Wp99tlnqlevntN448aN9fPPP5epkZiYGO3atUtfffVVmV5/pU2ZMkWTJ092dRsAAOAKKdOZptzcXKczTMWOHz8uLy+vS97f0KFDtWLF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wFFz+vRp89RTT5maNWuaqlWrmgceeMAcOXLEaT8//fSTufvuu42Pj4/x9/c3o0ePNgUFBU41a9euNW3atDGenp7muuuuczpGsYv9rFjppbJ47LHHTIMGDYynp6epU6eO6dy5syMwGcO8X2nnhibm/+pkM8YY15zjAgAAqDxY0wQAAGABoQkAAMACQhMAAIAFhCYAAAALCE0AAAAWEJoAAAAsIDQBAABYQGgCgEtgs9m0fPlyV7cBwAUITQAqJZvNdsHHpEmTzvvan376STabTampqeXah6+vr2655RatWbPmT+8XQMVDaAJQKR05csTxmDlzpux2u9PY008/fcV6WbBggY4cOaINGzbI399f99xzj3788ccrdnwAVwahCUClFBQU5Hj4+vrKZrM5ngcEBGj69OmqV6+evLy81KZNGyUkJDhe27BhQ0nSTTfdJJvNpjvvvFOStHnzZt11113y9/eXr6+v7rjjDm3duvWivfj5+SkoKEgtWrTQvHnzdPr0aSUmJurXX3/Vww8/rGuvvVZVq1ZVy5Yt9f777zte984776h27drKy8tz2l/37t3Vt2/fcpglAOWJ0ATgqjNr1iy9+uqr+te//qUdO3YoMjJS9913n7777jtJ0qZNmyRJn3/+uY4cOaKPPvpIknTy5ElFR0frq6++0jfffKPGjRurW7duOnnypOVj+/j4SJLy8/N15swZhYaGKj4+Xrt27dLgwYPVt29fx/EfeughFRYW6pNPPnG8/ujRo4qPj9djjz1WLnMBoBy5+jcGA8CftWDBAuPr6+t4XrduXfPPf/7TqaZ9+/bmqaeeMsYYs3//fiPJbNu27YL7LSwsNDVq1DCffvqpY0ySWbZsWanPc3NzzVNPPWXc3d3N9u3bS91nVFSUGT16tOP5kCFDzN133+14/uqrr5rrrrvOFBUVXbA3AFeeh4szGwCUq5ycHKWnp+uWW25xGr/lllu0ffv2C742MzNTzz33nNatW6ejR4+qsLBQv/32mw4cOHDB1z388MNyd3fX6dOnVadOHb399ttq1aqVCgsL9dJLL+mDDz7Q4cOHlZ+fr7y8PFWtWtXx2scff1zt27fX4cOHde211youLk79+/eXzWYr+yQAuCwITQDwv6Kjo/Xrr79q1qxZatCggby8vBQeHq78/PwLvm7GjBmKiIiQr6+v6tSp4xh/5ZVXNGvWLM2cOVMtW7ZUtWrVNHLkSKf93XTTTWrdurXeeecddenSRbt371Z8fPxle48Ayo7QBOCqYrfbVbduXW3YsEF33HGHY3zDhg3q0KGDJMnT01OSVFhY6PTaDRs2aO7cuerWrZsk6eDBg/rll18uesygoCA1atSoxPiGDRt0//3369FHH5UkFRUVad++fWrevLlT3aBBgzRz5kwdPnxYERERCg4OvoR3DOBKYSE4gKvOmDFj9PLLL2vJkiVKS0vTuHHjlJqaqhEjRkiSAgIC5OPjo4SEBGVmZio7O1uS1LhxY/3nP//Rt99+q40bN6pPnz6Ohd1l0bhxYyUmJurrr7/Wt99+qyeeeEKZmZkl6h555BEdOnRI/+///T8WgAMVGKEJwFVn+PDhio2N1ejRo9WyZUslJCTok08+UePGjSVJHh4eeu211/TGG2+obt26uv/++yVJb7/9tk6cOKG2bduqb9++Gj58uAICAsrcx3PPPae2bdsqMjJSd955p4KCgtS9e/cSdb6+vurRo4eqV69e6nYAFYPNGGNc3QQA/NV17txZN954o1577TVXtwLgPAhNAOBCJ06c0Lp169SzZ0/t2bNHTZo0cXVLAM6DheAA4EI33XSTTpw4oZdffpnABFRwnGkCAACwgIXgAAAAFhCaAAAALCA0AQAAWEBoAgAAsIDQBAAAYAGhCQAAwAJCEwAAgAWEJgAAAAsITQAAABb8f+8yp++SvK2MAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columns_list = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "for column in columns_list:\n",
        "    df[column] = pd.to_numeric(df[column], errors='coerce')\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.boxplot(df[columns_list], vert=False)\n",
        "plt.xlabel(\"Values\")\n",
        "plt.ylabel(\"Columns\")\n",
        "plt.title(\"Boxplots for the Columns\")\n",
        "plt.yticks(range(1, len(columns_list) + 1), columns_list)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "x5bPXSav69yf",
        "outputId": "720233ea-b3da-499b-a4a6-779f03c1cce8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA6oAAAIjCAYAAAAKtOa6AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAB3n0lEQVR4nO3deVxWdf7//+fFvl6gArKI4hqm5m5lmZZOmGKamo3pjJa2mTlmNubUZDqlbU62ZxvOZ8ysRm0aLStNitQyd8kNtzRFcWWRHd6/P/xxfbkEFBG8jvK4327nptc57/N+v865TuSTs9mMMUYAAAAAAFiEm6sLAAAAAACgNIIqAAAAAMBSCKoAAAAAAEshqAIAAAAALIWgCgAAAACwFIIqAAAAAMBSCKoAAAAAAEshqAIAAAAALIWgCgAAAACwFIIqAACXmM1m0zPPPOPqMhxeeuklNWnSRO7u7mrXrp1LakhMTJTNZtN//vMfl4x/sZ555hnZbDZXlwEAVwyCKgDgijFnzhzZbDanKSwsTDfffLO++uorV5d30bZu3apnnnlG+/btq7Y+v/nmG/31r3/VDTfcoISEBE2fPr3a+i7PvHnzNGvWrBodozIyMjI0depUtW3bVgEBAfL19VXr1q01adIkHTp0yNXlAUCt5+HqAgAAqG7Tpk1T48aNZYzRkSNHNGfOHPXp00f/+9//FB8f7+ryqmzr1q2aOnWqevTooZiYmGrp87vvvpObm5s++OADeXl5VUuf5zJv3jwlJydr/PjxNT5WRfbs2aNevXpp//79uvPOO3X//ffLy8tLmzdv1gcffKBFixZp586dLqsPAEBQBQBcgW677TZ16tTJ8XnUqFGqX7++Pv7448s6qNaEtLQ0+fr6VltINcYoNzdXvr6+1dJfdSssLNTAgQN15MgRJSYm6sYbb3Ra/txzz+mFF15wUXUAgBJc+gsAuOIFBwfL19dXHh7Ov589ffq0HnvsMUVHR8vb21tXXXWVXn75ZRljJEk5OTmKjY1VbGyscnJyHOudOHFCERER6tq1q4qKiiRJI0eOVEBAgPbs2aO4uDj5+/srMjJS06ZNc/R3Lhs2bNBtt90mu92ugIAA9ezZUz/99JNj+Zw5c3TnnXdKkm6++WbHpc2JiYmSpLVr1youLk4hISHy9fVV48aNde+9955zTJvNpoSEBJ0+fdrR35w5cySdCXT/+Mc/1LRpU3l7eysmJkZ/+9vflJeX59RHTEyM4uPj9fXXX6tTp07y9fXV7Nmzyx2vR48eWrJkiX777TfHeGefGS4uLtZzzz2nBg0ayMfHRz179tSuXbvK9PXzzz+rd+/eCgoKkp+fn7p3766VK1eec3slacGCBdq0aZOefPLJMiFVkux2u5577jmneZ999pk6duwoX19fhYSEaPjw4Tp48OA5x9m3b5/T/izt7HuUS+5v3blzp4YPH66goCCFhobq73//u4wxOnDggPr37y+73a7w8HDNnDnTqb+S+3s//fTT8+67lJQUDRo0SOHh4fLx8VGDBg30xz/+Uenp6efZcwBwaXFGFQBwxUlPT9exY8dkjFFaWppef/11ZWVlafjw4Y42xhjdfvvtWrFihUaNGqV27drp66+/1uOPP66DBw/qlVdeka+vr/71r3/phhtu0JNPPql//vOfkqSHH35Y6enpmjNnjtzd3R19FhUVqXfv3rruuuv04osvaunSpZoyZYoKCws1bdq0Cuv99ddf1a1bN9ntdv31r3+Vp6enZs+erR49euj777/Xtddeq5tuuknjxo3Ta6+9pr/97W9q2bKlJKlly5ZKS0vTrbfeqtDQUD3xxBMKDg7Wvn37tHDhwnPup3//+9969913tWbNGr3//vuSpK5du0qSRo8erX/9618aPHiwHnvsMf3888+aMWOGtm3bpkWLFjn1s2PHDg0dOlQPPPCA7rvvPl111VXljvfkk08qPT1dv//+u1555RVJUkBAgFOb559/Xm5ubpo4caLS09P14osvatiwYfr5558dbb777jvddttt6tixo6ZMmSI3NzclJCTolltuUVJSkrp06VLhNn/xxReSpD/96U/n3Dcl5syZo3vuuUedO3fWjBkzdOTIEb366qtauXKlNmzYoODg4Er1Uxl33XWXWrZsqeeff15LlizRs88+q7p162r27Nm65ZZb9MILL+ijjz7SxIkT1blzZ910001O659v3+Xn5ysuLk55eXl65JFHFB4eroMHD2rx4sU6deqUgoKCqm1bAOCiGQAArhAJCQlGUpnJ29vbzJkzx6nt559/biSZZ5991mn+4MGDjc1mM7t27XLMmzx5snFzczM//PCD+eyzz4wkM2vWLKf1RowYYSSZRx55xDGvuLjY9O3b13h5eZmjR4865ksyU6ZMcXweMGCA8fLyMrt373bMO3TokAkMDDQ33XSTY17J2CtWrHAae9GiRUaS+eWXXyq/s0rV7e/v7zRv48aNRpIZPXq00/yJEycaSea7775zzGvUqJGRZJYuXVqp8fr27WsaNWpUZv6KFSuMJNOyZUuTl5fnmP/qq68aSWbLli3GmDP7tHnz5iYuLs4UFxc72mVnZ5vGjRubP/zhD+ccv3379iYoKKhStebn55uwsDDTunVrk5OT45i/ePFiI8k8/fTTjnlTpkwxpf9ZtXfvXiPJJCQklOn37O+/ZN3777/fMa+wsNA0aNDA2Gw28/zzzzvmnzx50vj6+poRI0Y45lV2323YsMFIMp999lmlth8AXIlLfwEAV5w333xT3377rb799lvNnTtXN998s0aPHu10hvHLL7+Uu7u7xo0b57TuY489JmOM01OCn3nmGbVq1UojRozQmDFj1L179zLrlRg7dqzj7zabTWPHjlV+fr6WLVtWbvuioiJ98803GjBggJo0aeKYHxERobvvvls//vijMjIyzrm9JWf1Fi9erIKCgnO2rYwvv/xSkjRhwgSn+Y899pgkacmSJU7zGzdurLi4uIseV5Luuecep/tlu3XrJunMA5AkaePGjUpJSdHdd9+t48eP69ixYzp27JhOnz6tnj176ocfflBxcXGF/WdkZCgwMLBStaxdu1ZpaWkaM2aMfHx8HPP79u2r2NjYMvvhYo0ePdrxd3d3d3Xq1EnGGI0aNcoxPzg4WFdddZVjf5R2vn1Xcsb066+/VnZ2drXWDgDVjaAKALjidOnSRb169VKvXr00bNgwLVmyRFdffbUjNErSb7/9psjIyDKhpeSS2t9++80xz8vLSx9++KH27t2rzMxMJSQklPvOTDc3N6ewKUktWrSQpApfKXP06FFlZ2eXe7lsy5YtVVxcrAMHDpxze7t3765BgwZp6tSpCgkJUf/+/ZWQkFDmftLK+u233+Tm5qZmzZo5zQ8PD1dwcLDTvpHOBNXq0rBhQ6fPderUkSSdPHlS0pl7LCVpxIgRCg0NdZref/995eXlnfN+S7vdrszMzErVUrKd5X03sbGxZfbDxTp724OCguTj46OQkJAy80v2x7nWP3vfNW7cWBMmTND777+vkJAQxcXF6c033+T+VACWRFAFAFzx3NzcdPPNNys1NdURdC7U119/LUnKzc2tch81xWaz6T//+Y9Wr16tsWPH6uDBg7r33nvVsWNHZWVlXVS/lVGdT/gtfc9vaeb/fyBVydnSl156yXHW/Ozp7PteS4uNjVV6evp5w//FqmjflTx8qzzlbfv59seFtp05c6Y2b96sv/3tb8rJydG4cePUqlUr/f777xXWBQCuQFAFANQKhYWFkuQIbo0aNdKhQ4fKnF3bvn27Y3mJzZs3a9q0abrnnnvUvn17jR49utyzUMXFxWUuySx5H2dF7z0NDQ2Vn5+fduzYUWbZ9u3b5ebmpujoaEnnD47XXXednnvuOa1du1YfffSRfv31V82fP/+c65SnUaNGKi4uLhPIjxw5olOnTjntmwtV2fBbkaZNm0o6c2a05Kz52ZOnp2eF6/fr10+SNHfu3POOVbKd5X03O3bsOOd+KDmbeerUKaf51X0WtiratGmjp556Sj/88IOSkpJ08OBBvfPOO64uCwCcEFQBAFe8goICffPNN/Ly8nJc2tunTx8VFRXpjTfecGr7yiuvyGaz6bbbbnOsO3LkSEVGRurVV1/VnDlzdOTIET366KPljlW6P2OM3njjDXl6eqpnz57ltnd3d9ett96q//73v06XBx85ckTz5s3TjTfeKLvdLkny9/eXVDb8nDx5sswZtnbt2klSlS7/7dOnjyRp1qxZTvNLnnrct2/fC+6zhL+//0VdatqxY0c1bdpUL7/8crlni48ePXrO9QcPHqw2bdroueee0+rVq8ssz8zM1JNPPilJ6tSpk8LCwvTOO+847cevvvpK27ZtO+d+sNvtCgkJ0Q8//OA0/6233jpnfTUpIyPD8QubEm3atJGbm1uVLxMHgJrC62kAAFecr776ynFmNC0tTfPmzVNKSoqeeOIJR+jr16+fbr75Zj355JPat2+f2rZtq2+++Ub//e9/NX78eMeZu2effVYbN27U8uXLFRgYqGuuuUZPP/20nnrqKQ0ePNgR6iTJx8dHS5cu1YgRI3Tttdfqq6++0pIlS/S3v/1NoaGhFdb77LPP6ttvv9WNN96oMWPGyMPDQ7Nnz1ZeXp5efPFFR7t27drJ3d1dL7zwgtLT0+Xt7a1bbrlF8+bN01tvvaU77rhDTZs2VWZmpt577z3Z7Xan+iqrbdu2GjFihN59912dOnVK3bt315o1a/Svf/1LAwYM0M0333zBfZbo2LGjPvnkE02YMEGdO3dWQECA4yxnZbi5uen999/XbbfdplatWumee+5RVFSUDh48qBUrVshut+t///tfhet7enpq4cKF6tWrl2666SYNGTJEN9xwgzw9PfXrr79q3rx5qlOnjp577jl5enrqhRde0D333KPu3btr6NChjtfTxMTEVPjLihKjR4/W888/r9GjR6tTp0764YcfHGfYXeG7777T2LFjdeedd6pFixYqLCzUv//9b7m7u2vQoEEuqwsAyuXCJw4DAFCtyns9jY+Pj2nXrp15++23nV5nYowxmZmZ5tFHHzWRkZHG09PTNG/e3Lz00kuOduvWrTMeHh5Or5wx5syrQzp37mwiIyPNyZMnjTH/7zUvu3fvNrfeeqvx8/Mz9evXN1OmTDFFRUVO6+us15MYY8z69etNXFycCQgIMH5+fubmm282q1atKrON7733nmnSpIlxd3d3vKpm/fr1ZujQoaZhw4bG29vbhIWFmfj4eLN27drz7rPyXk9jjDEFBQVm6tSppnHjxsbT09NER0ebyZMnm9zcXKd2jRo1Mn379j3vOCWysrLM3XffbYKDg40kx6tqSl6xcvarUyp6zcuGDRvMwIEDTb169Yy3t7dp1KiRGTJkiFm+fHml6jh58qR5+umnTZs2bYyfn5/x8fExrVu3NpMnTzapqalObT/55BPTvn174+3tberWrWuGDRtmfv/9d6c2Z7+expgzr8wZNWqUCQoKMoGBgWbIkCEmLS2twtfTlH6FkTEVfzfdu3c3rVq1cnyu7L7bs2ePuffee03Tpk2Nj4+PqVu3rrn55pvNsmXLKrXPAOBSshlTzt34AADggowcOVL/+c9/LurhRQAA4AzuUQUAAAAAWApBFQAAAABgKQRVAAAAAIClcI8qAAAAAMBSOKMKAAAAALAUgioAAAAAwFI8XF0ArmzFxcU6dOiQAgMDZbPZXF0OAAAAABcxxigzM1ORkZFyczv3OVOCKmrUoUOHFB0d7eoyAAAAAFjEgQMH1KBBg3O2IaiiRgUGBko6czDa7XYXVwMAAADAVTIyMhQdHe3ICOdCUEWNKrnc1263E1QBAAAAVOqWQB6mBAAAAACwFIIqAAAAAMBSCKoAAAAAAEshqAIAAAAALIWgCgAAAACwFIIqAAAAAMBSCKoAAAAAAEshqAIAAAAALIWgCgAAAACwFIIqAAAA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Nw0fPlwTJ07URx99JEn66KOP9PTTT+uNN95Q+/bttWHDBt13333y9/fXiBEjlJqaql69eql3796aOHGiAgICdOzYMUcN0dHRWrBggQYNGqQdO3bIbrfL19dXqampGjp0qF588UXdcccdyszMVFJSkuMemdLy8vKUl5fn+JyRkVGp/X6p5OTkSJK2bdvm4kpcq2T7S/YHai/+m0BtNmHCBFeXgFJyc3MrXPb7779XuKxJkybatWtXlcZs1qyZvvzyS91yyy367rvvnJZNnjxZ+/bt08cff6x169ZpyZIljmXvv/++evfurcWLF6tPnz4yxujLL7+UJE2aNEn79u3TnXfeqc8++0zFxcWO7Ttw4ICkMz974+Pj9dlnnzmWNW/eXF999ZWys7O1evVq/e1vf9PixYslSX369FH79u3VtWtXJSUlqUePHnJzc9PkyZMd8yQ56n3nnXdUWFioZ5991nHVXEnbkhpfeOEFvfXWW2rXrp1jPWPMOcfo0aOH0z5KSkpyrOvm5nyh5vnWvdxcTtt6OdV6LpYMqi+//LImTZqkP/7xj5KkF154QStWrNCsWbP05ptvKjQ0VJJUr149hYeHO9a75ZZbnPp59913FRwcrO+//17x8fHnHTc7O1tPPfWU3N3d1b17d0VFRTldgvzII4/o66+/1qeffqouXbrI19dXd999txISEhxBde7cuWrYsKHTl56enq6AgABJZ34weXp66t1331XTpk0lSfv371dCQoL279+vyMhISdLEiRO1dOlSJSQkaPr06ZKkgoICvfPOO471xo4dq2nTpjnGmTJlimbOnOm4DKVx48baunWrZs+erREjRjgu8Q0ICHDst9JB1d3d3XGpSVhYmIKDgyWduVy4sLBQAwcOVKNGjSRJbdq0KXcfzpgxQ1OnTj3vvnaVffv2SZKGDx/u2kIsYt++fbrhhhtcXQZciP8mAFzuLuay4JJwXPLvr9JSUlIkSa1bt9bWrVudlu3evVvt27eXdOYkR+lf3pesV/Jvv4r4+/uXW4t05ha50v929fX1VevWrR3LSlQ0r+QkRuk+StpK0qhRo/TCCy9o9+7dql+/vmN5yXacb4zSdZ7dd2nnWvdyczlt6+VU67lYLqhmZGTo0KFDZf7xfMMNN2jTpk3nXPfIkSN66qmnlJiYqLS0NBUVFSk7O1v79+8/53pDhw6Vu7u7cnJyFBoaqg8++EDXXHONioqKNH36dH366ac6ePCg8vPzlZeX53R/wX333afOnTvr4MGDioqK0pw5czRy5EinH5qBgYFav369pDNheNmyZXrwwQdVr1499evXT1u2bFFRUZFatGjhVFdeXp7q1avn+Ozn5+cIqZIUERGhtLQ0SdLp06e1e/dujRo1Svfdd5+jTWFhoYKCgs65/efTtm1b9ezZU23atFFcXJxuvfVWDR48WHXq1CnTdvLkyU6/oc7IyFB0dPRFjV+dYmJiJJ35hULLli1dW4wLbdu2TcOHD3fsD9Re/DeB2mzChAn6/vvvXV0GLlJ5V3hVVsl9p4cOHSqzrHnz5vrmm2+UnJxc5gqkpk2bOubl5OQ41VCyXlZW1jnHPn36dLm1SGf+jZecnOz4nJOT4/gcERHhmF/RvJJ/Ly5evFijR492aitJH3zwgWM7StZNTk52bMf5xihdZ0mb6667rszyc617ubmctvVyqvWcau4K5MorfR9nyXXLiYmJTm3Gjx9vbr75ZmNMxU/9jYuLM506dTJLliwxycnJJiUlxYSEhJhXXnnF0UYqe4/q22+/bVJSUkxaWppTfzNmzDD16tUz//73v83GjRtNSkqK6du3r+nfv79Tuw4dOpjp06ebtWvXGjc3N7N///5yt+3sWm+44QZjjDHz58837u7uZvv27SYlJcVpSk1NrbCfRYsWmZKv8PDhw0aSmTt3bpk+9uzZ41inbdu2Tk9UPntfVvTU3+LiYvPjjz+ap59+2rRp08aEhoY69VsR7lG1JvbDBeAeVeCKxT2q1pq4R5V7VK3sctpWK9d6IdnAckHVGGMiIyPNc88959Smc+fO5uGHHzbG/L8HHq1du9apTUBAgPm///s/x+f9+/cbSecNqqU/lxYfH2/uvfdex+eioiLTvHnzMkH1rbfeMi1atDAPP/ywufXWW8+5bSX69OljOnToYIwxZseOHUaS+eGHH8qto6J+SgdVY87st2nTplXYhzHnD6orV640ksyxY8cq7KOwsNBERUWZmTNnnnMsYwiqVsV+uAAEVeCKxqtpLo/JZrNd8jFDQ0PNgAEDHJ9LB2lPT09js9nMHXfcUWa9G264wcTGxhpJpm7duk7L/Pz8KjV2nTp1HH+/++67HX+fPn26ycjIMKtWrTL9+vUzNpvN6VUjCxYsMDabzfTr18+xXp06dcw111xjbDabeeCBBxyv32natKlZtWqVycjIMNOnT6/0GGcrPWZJf5Vd93JzOW2rVWu97IPqK6+8Yux2u5k/f77Zvn27mTRpkvH09DQ7d+40xhhTUFBgfH19zbPPPmsOHz5sTp06ZYwxpn379uYPf/iD2bp1q/npp59Mt27djK+vb5WD6qOPPmqio6PNypUrzdatW83o0aON3W4vE1RPnTpl/Pz8jJeXl5k/f36ZbbPb7SY1NdWkpqaaPXv2mNmzZxt3d3czdepUR7thw4Y53mu0Z88e8/PPP5vp06ebxYsXl7uPjCkbVN977z3j6+trXn31VbNjxw6zefNm8+GHHzoFyvMF1d9//93YbDYzZ84ck5aWZjIzM81PP/1knnvuOfPLL7+Y3377zXz66afGy8vLfPnll+Xut9IIqtbEfrgABFXgikdYZSqZLqf3qDZu3LjG36Na0RiVGbOy615uLqdttWKtl/1Tf8eNG6f09HQ99thjSktL09VXX60vvvjC8fRbDw8Pvfbaa5o2bZqefvppdevWTYmJifrggw90//33q0OHDoqOjtb06dMv6n2sTz31lPbs2aO4uDj5+fnp/vvv14ABAxzv1yoRFBSkQYMGacmSJRowYECZfjIyMhzXgHt7e6tRo0aaNm2aJk2a5GiTkJCgZ599Vo899pgOHjyokJAQXXfddZV6CFSJ0aNHy8/PTy+99JIef/xx+fv7q02bNho/fnyl+4iKitLUqVP1xBNP6J577tGf//xnTZo0ST/88INmzZqljIwMNWrUSDNnztRtt91W6X4BALCqNWvWKCsrS7169dLPP//skhp8fHzUsGFD7dy5s8z8wMBAeXl56cSJE8rNzXXcR1jyLs/8/Hx5eHgoPDxcnp6eSk9PV1ZWljw8PGS321VQUKATJ07IGCMvLy9FREQoJydH+fn5qlevnvr376/69evr559/1pdffqnCwkL5+PioUaNGys/PV506dXTixAllZ2erqKhIderUUVFRkQICAtSgQQP5+fnp999/l7e3t4qLi3XkyBEdP35cOTk58vLyUkBAgHJycpSZmSlPT0/5+fnJ399fdrtdQUFBysvLk6+vr0JDQ3X8+HH5+/vrxhtvVKtWrZSUlKQ1a9bo0KFDysnJUXh4uFq3bq2srCwdOHBAUVFRCggI0E8//aSjR48qJCRE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NbfccovTvJ49e5YJql9++aUJCgoy06ZNM1ddddU5xzvblRBUjSGsMl1eU/369cvMu+6668w111zj+NypUydjs9nMggULzIIFCxyh94YbbjBPP/20sdlspm7duo7206dPN/369XOsU6Jk3X79+plVq1aZjIwMs2rVKtOpUyfHOKtWrTJz5841NpvNUdvcuXPNqlWrHH0+/vjjZfqZPn26Y/zY2Fjz7bffmm+//dbceOONjvnV9XqW8raj9PjTp093bFt5+6EmVbSPL3UdAABcLIJqKTt37jQhISGmW7du5vvvvzf79+83X331lWndurVp3ry5OX78uKPte++9ZyIjI01ISIj597//7dTPe++9Z3x9fc2rr75qduzYYTZv3mw+/PBDM3PmTGNMxUF15cqVRpJZtmyZOXr0qOPdqdURVJcuXWo8PDzMM888Y5KTk83WrVvNxx9/bJ588knHOucKqq+++qqx2+1m6dKlZseOHeapp54ydru9TFAtKioy0dHRxsvLyzz//PPn2NtlXSlB1RjCKtOVNTVu3PiC36N69jql1z37HZ+NGzeu1HtUS/d5Ie9RDQsLuyTvUQ0LCyuzXyraDzWpon1MSAUAXE4uJBt46ArXvHlzrV27VlOmTNGQIUN04sQJhYeHa8CAAZoyZYrTewIHDx6ssWPHyt3dXQMGDHDqZ/To0fLz89NLL72kxx9/XP7+/mrTpo3Gjx9/zvG7du2qBx98UHfddZeOHz+uKVOm6JlnnqmWbYuLi9PixYs1bdo0vfDCC/L09FRsbKxGjx5dqfUfeOABbdiwQXfddZdsNpuGDh2qMWPG6KuvvnJq5+bmppEjR2r69On685//XC21X46MMbxPtRax2Wyy2WxO37u3t7eCg4MVFRWlU6dOyRijnJwcGWN06tQp5eXlyd3dXVFRUQoNDdWRI0d08uRJFRcXS5L8/f3VpEkTtW7dWllZWTpw4ICio6PVvn17paeny83NTd26dZPNZtOyZcu0bNkypaenKzc31/Hu5datW8vNzU12u10HDx6UMUYNGzZUvXr1dPToUa1fv17+/v7q1q2bxowZo1WrVikxMVHFxcWqV6+e6tevr6ioKHXr1k3u7u6O7R04cKD69++vxMREx0PbStqkpaUpIiKizDpnr5uUlKTU1FSntjNmzHCa37VrV61atapMu3P1I8mprh49eqhHjx7l1nIxzjV+edt2KZ1rHwMAcCWyGVOJJw2h1hs1apSOHj2qL7744oLWy8jIUFBQkNLT02W322uousr78oMZ6nPgeX0Z/YT6jJrstGz9+vXq2LGj1q1bpw4dOlTYR2XbAQAAAPh/LiQbXPFnVHFx0tPTtWXLFs2bN++CQyoAAAAAVAVBFefUv39/rVmzRg8++KD+8Ic/uLocAAAAALUAQRXnVHJPGAAAAABcKm6uLgAAAAAAgNIIqqhVIiMjnf6sitjYWK1bt06xsbHVVRYAAACAUrj0F7WKt7e3059V4efnx9N+AQAAgBrEGVUAAAAAgKUQVAEAAAAAlkJQBQAAAABYCkEVAAAAAGApBFUAAAAAgKXw1F/UKrm5uZKk7du3Kyd4vdOybdu2uaIkAAAAAGchqKJW2bdvn9pL+sc//qENh6eW2yYwMPDSFgUAAADACUEVtUq3O0Zp0SLpjfk3yiewbpnlgYGBat68uQsqAwAAAFDCZowxri4CV66MjAwFBQUpPT1ddrvd1eUAAAAAcJELyQY8TAkAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlAFAAAAAFgKQRUAAAAAYCkEVQAAAACApRBUAQAAAACWQlCtQSNHjpTNZnNM9erVU+/evbV58+ZLVkOPHj0c4/v4+Ojqq6/WW2+9dcnGBwAAAIALRVCtYb1791ZqaqpSU1O1fPlyeXh4KD4+/pLWcN999yk1NVVbt27VkCFD9PDDD+vjjz++pDUAAAAAQGURVGuYt7e3wsPDFR4ernbt2umJJ57QgQMHdPToUUnSpEmT1KJFC/n5+alJkyb6+9//roKCAsf6mzZt0s0336zAwEDZ7XZ17NhRa9eudSz/8ccf1a1bN/n6+io6Olrjxo3T6dOnnWrw8/NTeHi4mjRpomeeeUbNmzfXF198cd7x9+3bJzc3N6fxJGnWrFlq1KiRiouLa2SfAQAAAKjdCKqXUFZWlubOnatmzZqpXr16kqTAwEDNmTNHW7du1auvvqr33ntPr7zyimOdYcOGqUGDBvrll1+0bt06PfHEE/L09JQk7d69W71799agQYO0efNmffLJJ/rxxx81duzYc9bh6+ur/Pz8844fExOjXr16KSEhwWn9hIQEjRw5Um5uZQ+fvLw8ZWRkOE0AAAAAcCFsxhjj6iKuVCNHjtTcuXPl4+MjSTp9+rQiIiK0ePFidejQodx1Xn75Zc2fP99xFtNut+v111/XiBEjyrQdPXq03N3dNXv2bMe8H3/8Ud27d9fp06fl4+OjHj16qF27dpo1a5aKior08ccf609/+pPeeOMNPfzww+cd/9NPP9WDDz6o1NRUeXt7a/369erUqZP27NmjmJiYMus/88wzmjp1apn56enpstvt599pAAAAAK5IGRkZCgoKqlQ2IKjWoJEjR+rgwYN6++23JUknT57UW2+9pS+//FJr1qxRo0aN9Mknn+i1117T7t27lZWVpcLCQtntdqWlpUk6E/yee+45de/eXb169dKdd96ppk2bSpI6d+6szZs3O86wSpIxRtnZ2dq6datatmypHj16aNWqVfLy8lJ+fr7c3d310EMP6eWXX5abm9t5x8/Pz1dUVJRef/11/fGPf9S4ceP066+/avny5eVuc15envLy8hyfMzIyFB0dTVAFAAAAarkLCapc+lvD/P391axZMzVr1kydO3fW+++/r9OnT+u9997T6tWrNWzYMPXp00eLFy/Whg0b9OSTTzouy5XOBNVff/1Vffv21Xfffaerr75aixYtknTmUuIHHnhAGzdudEybNm1SSkqKI8xKZy4f3rhxo/bu3avTp0/rn//8p9zc3Co1vpeXl/785z8rISFB+fn5mjdvnu69994Kt9fb21t2u91pAgAAAIAL4eHqAmobm80mNzc35eTkaNWqVWrUqJGefPJJx/LffvutzDotWrRQixYt9Oijj2ro0KFKSEjQHXfcoQ4dOmjr1q1q1qzZOccMCgoqt01lxx89erRat26tt956S4WFhRo4cOCFbDIAAAAAXBDOqNawvLw8HT58WIcPH9a2bdv0yCOPKCsrS/369VPz5s21f/9+zZ8/X7t379Zrr73mOFsqSTk5ORo7dqwSExP122+/aeXKlfrll1/UsmVLSWee2Ltq1SqNHTtWGzduVEpKiv773/+e92FKJc43fomWLVvquuuu06RJkzR06FD5+vpWz84BAAAAgHIQVGvY0qVLFRERoYiICF177bX65Zdf9Nlnn6lHjx66/fbb9eijj2rs2LFq166dVq1apb///e+Odd3d3XX8+HH9+c9/VosWLTRkyBDddtttjocVXXPNNfr++++1c+dOdevWTe3bt9fTTz+tyMjIStV2vvFLGzVqlPLz88952S8AAAAAVAcepoRK+cc//qHPPvtMmzdvvqD1LuSGaQAAAABXLh6mhGqTlZWl5ORkvfHGG3rkkUdcXQ4AAACAWoCginMaO3asOnbsqB49enDZLwAAAIBLgkt/UaO49BcAAACAxKW/AAAAAIDLGEEVAAAAAGApBFUAAAAAgKUQVAEAAAAAlkJQBQAAAABYCkEVAAAAAGApBFUAAAAAgKUQVAEAAAAAlkJQBQAAAABYCkEVAAAAAGApBFUAAAAAgKUQVAEAAAAAlkJQBQAAAABYCkEVAAAAAGApBFUAAAAAgKUQVAEAAAAAlkJQBQAAAABYCkEVAAAAAGApBFUAAAAAgKUQVAEAAAAAlkJQBQAAAABYCkEVAAAAAGApBFUAAAAAgKUQVAEAAAAAlkJQBQAAAABYCkEVAAAAAGApBFUAAAAAgKUQVAEAAAAAluLh6gJwZTPGSJIyMjJcXAkAAAAAVyrJBCUZ4VwIqqhRmZmZkqTo6GgXVwIAAADACjIzMxUUFHTONjZTmTgLVFFxcbEOHTqkwMBA2Ww2V5ejjIwMRUdH68CBA7Lb7a4uBxbFcYLK4DhBZXCcoDI4TnA+V8oxYoxRZmamIiMj5eZ27rtQOaOKGuXm5qYGDRq4uowy7Hb7Zf0fOS4NjhNUBscJKoPjBJXBcYLzuRKOkfOdSS3Bw5QAAAAAAJZCUAUAAAAAWApBFbWKt7e3pkyZIm9vb1eXAgvjOEFlcJygMjhOUBkcJzif2niM8DAlAAAAAIClcEYVAAAAAGApBFUAAAAAgKUQVAEAAAAAlkJQBQAAAABYCkEVtcqbb76pmJgY+fj46Nprr9WaNWtcXRKq6IcfflC/fv0UGRkpm82mzz//3Gm5MUZPP/20IiIi5Ovrq169eiklJcWpzYkTJzRs2DDZ7XYFBwdr1KhRysrKcmqzefNmdevWTT4+PoqOjtaLL75YppbPPvtMsbGx8vHxUZs2bfTll19ecC2ofjNmzFDnzp0VGBiosLAwDRgwQDt27HBqk5ubq4cfflj16tVTQECABg0apCNHjji12b9/v/r27Ss/Pz+FhYXp8ccfV2FhoVObxMREdejQQd7e3mrWrJnmzJlTpp7z/fypTC2ofm+//bauueYa2e122e12XX/99frqq68cyzlGcLbnn39eNptN48ePd8zjOMEzzzwjm83mNMXGxjqWc4xUgQFqifnz5xsvLy/z4Ycfml9//dXcd999Jjg42Bw5csTVpaEKvvzyS/Pkk0+ahQsXGklm0aJFTsuff/55ExQUZD7//HOzadMmc/vtt5vGjRubnJwcR5vevXubtm3bmp9++skkJSWZZs2amaFDhzqWp6enm/r165thw4aZ5ORk8/HHHxtfX18ze/ZsR5uVK1cad3d38+KLL5qtW7eap556ynh6epotW7ZcUC2ofnFxcSYhIcEkJyebjRs3mj59+piGDRuarKwsR5sHH3zQREdHm+XLl5u1a9ea6667znTt2tWxvLCw0LRu3dr06tXLbNiwwXz55ZcmJCTETJ482dFmz549xs/Pz0yYMMFs3brVvP7668bd3d0sXbrU0aYyP3/OVwtqxhdffGGWLFlidu7caXbs2GH+9re/GU9PT5OcnGyM4RiBszVr1piYmBhzzTXXmL/85S+O+RwnmDJlimnVqpVJTU11TEePHnUs5xi5cARV1BpdunQxDz/8sONzUVGRiYyMNDNmzHBhVagOZwfV4uJiEx4ebl566SXHvFOnThlvb2/z8ccfG2OM2bp1q5FkfvnlF0ebr776ythsNnPw4EFjjDFvvfWWqVOnjsnLy3O0mTRpkrnqqqscn4cMGWL69u3rVM+1115rHnjggUrXgksjLS3NSDLff/+9MebM9+Dp6Wk+++wzR5tt27YZSWb16tXGmDO/EHFzczOH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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "columns_list = [\"BasePay\", \"OvertimePay\", \"Benefits\", \"TotalPay\", \"TotalPayBenefits\", \"Year\"]\n",
        "for column in columns_list:\n",
        "    df[column] = pd.to_numeric(df[column], errors='coerce')\n",
        "\n",
        "column_to_calculate = \"BasePay\"\n",
        "\n",
        "data_for_column = df[column_to_calculate].dropna()\n",
        "\n",
        "\n",
        "q1 = np.percentile(data_for_column, 25)\n",
        "\n",
        "q3 = np.percentile(data_for_column, 75)\n",
        "\n",
        "iqr = q3 - q1\n",
        "\n",
        "print(f\"IQR for {column_to_calculate}: {iqr}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GXQOCAet7JUT",
        "outputId": "3c4078cd-69d4-4d85-f5a6-c290cdcd2300"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "IQR for BasePay: 61584.6025\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# In the provided dataset, I analyzed six columns: BasePay, OvertimePay, Benefits, TotalPay, TotalPayBenefits, and Year. After calculating measures of central tendency and dispersion, I observed potential outliers in some columns, which might require further investigation. The range of values varied significantly across the columns. The data shows a widespread, and some columns exhibit a right-skewed distribution, indicating a concentration of lower values and a few high values. It's essential to identify and handle outliers appropriately to avoid biases in any subsequent analysis. Further exploration is warranted to gain a comprehensive understanding of the dataset's characteristics."
      ],
      "metadata": {
        "id": "tG6TwbqR8Fwu"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "The following instructions must be applied to columns columns BasePay, OvertimePay, Benefits, TotalPay, TotalPayBenefits, Year\n",
        "1.  Calculate standard deviation and variance without applying the methods (std() и variance())\n",
        "2.   Calculate standard deviation and variance by applying the methods (std() и variance())\n",
        "3. Calculate coefficient of covariance and range\n",
        "4. Calculate measures of central tendency\n",
        "5. Apply describe() method\n",
        "6. Build histograms\n",
        "7. Build boxplots\n",
        "8. Calculate IQR\n",
        "8. Write a short summary of your findings (no more than 100 words). Are there any outliers? Anything special?\n",
        "\n"
      ],
      "metadata": {
        "id": "fElapCHF4zk2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "h9u_p1Nz4yPs"
      }
    }
  ]
}